#!/command/with-contenv bash
#shellcheck shell=bash

# redirect stderr to stdout so it's picked up in the docker logs
exec 2>&1
# all errors will show a line number and the command used to produce the error
SCRIPT_PATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd)/$(basename "$0")"
trap 'echo -e "[ERROR] $SCRIPT_PATH in line $LINENO when executing: $BASH_COMMAND"' ERR

APPNAME="$(hostname)/get-pa-alertlist"

[[ "$LOGLEVEL" != "ERROR" ]] && echo "[$APPNAME][$(date)] Get-PA-Alertlist started as an s6 service" || true

# -----------------------------------------------------------------------------------
# Copyright 2020-2025 Ramon F. Kolb - licensed under the terms and conditions
# of GPLv3. The terms and conditions of this license are included with the Github
# distribution of this package, and are also available here:
# https://github.com/sdr-enthusiasts/docker-planefence
#
# The package contains parts of, and modifications or derivatives to the following:
# Dump1090.Socket30003 by Ted Sluis: https://github.com/tedsluis/dump1090.socket30003
# These packages may incorporate other software and license terms.
# -----------------------------------------------------------------------------------

LOOPTIME=6h

# Now let's wait a bit on the initial run to ensure that start_planefence is deployed and has finished calling prep-planefence.sh
# this ensures that the ALERTLIST parameter in /usr/share/plane-alert/plane-alert.conf is populated

# Note that on startup, get-pa-alertlist.sh is called form start_planefence so we don't need to do this right away.

while true
do
	[[ "$LOGLEVEL" != "ERROR" ]] && echo "[$APPNAME][$(date)] Restarting in $LOOPTIME" || true
	sleep $LOOPTIME
	/usr/share/plane-alert/get-pa-alertlist.sh
	/usr/share/plane-alert/get-silhouettes.sh
 	done
