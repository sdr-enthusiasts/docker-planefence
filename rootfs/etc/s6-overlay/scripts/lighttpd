#!/command/with-contenv bash
#shellcheck shell=bash disable=SC1091,SC2154

source /scripts/common
APPPATH="/usr/sbin/lighttpd"
CONFIGPATH="/etc/lighttpd/lighttpd.conf"
OWNER=www-data
GROUP=www-data

if [[ "$LOGLEVEL" != "ERROR" ]]; then "${s6wrap[@]}" echo "Lighttpd started as an s6 service"; fi

# -----------------------------------------------------------------------------------
# Copyright 2020-2025 Ramon F. Kolb - licensed under the terms and conditions
# of GPLv3. The terms and conditions of this license are included with the Github
# distribution of this package, and are also available here:
# https://github.com/sdr-enthusiasts/docker-planefence
#
# -----------------------------------------------------------------------------------
# Feel free to make changes to the variables between these two lines. However, it is
# STRONGLY RECOMMENDED to RTFM! See README.md for explanation of what these do.
#
#
# Be sure there is a /var/run/lighttpd, even with tmpfs
# The directory is defined as volatile and may thus be non-existing
# after a boot (DPM ยง9.3.2)

if [[ ! -d /var/cache/lighttpd ]]; then install -d -o $OWNER -g $GROUP -m 0750 "/var/cache/lighttpd"; fi
if [[ ! -d /var/cache/lighttpd/compress ]]; then install -d -o $OWNER -g $GROUP -m 0750 "/var/cache/lighttpd/compress"; fi
if [[ ! -d /var/cache/lighttpd/uploads ]]; then install -d -o $OWNER -g $GROUP -m 0750 "/var/cache/lighttpd/uploads"; fi
if [[ ! -d /var/log/lighttpd ]]; then install -d -o $OWNER -g $GROUP -m 0750 "/var/log/lighttpd"; fi
if [[ ! -d /var/log/lighttpd ]]; then install -d -o $OWNER -g $GROUP -m 0750 "/var/log/lighttpd"; fi
if [[ ! -d /var/run/lighttpd ]]; then install -d -o $OWNER -g $GROUP -m 0750 "/var/run/lighttpd"; fi
#
# -----------------------------------------------------------------------------------
# Enable PHP / FastCGI:
if [[ "$LOGLEVEL" != "ERROR" ]]; then "${s6wrap[@]}" echo "Starting FastCGI"; fi
lighttpd-enable-mod fastcgi fastcgi-php >/dev/null 2>&1 || true
#
# -----------------------------------------------------------------------------------
# Check if lighttpd is OK:
#
if [[ "$LOGLEVEL" != "ERROR" ]]; then "${s6wrap[@]}" echo "Checking Lighttpd configuration"; fi
$APPPATH -tt -f $CONFIGPATH || exit $?
#
# -----------------------------------------------------------------------------------
# Now run ligghttpd for real
#
if [[ "$LOGLEVEL" != "ERROR" ]]; then "${s6wrap[@]}" echo "Bringing Lighttpd Up"; fi
$APPPATH -f $CONFIGPATH -D
